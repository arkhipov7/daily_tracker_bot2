import logging
import os
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from datetime import datetime
import base64
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ Google Credentials
creds_b64 = os.getenv("GOOGLE_CREDS_BASE64")
with open("google-credentials.json", "wb") as f:
    f.write(base64.b64decode(creds_b64))

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_name("google-credentials.json", scope)
client = gspread.authorize(creds)
sheet = client.open("–¢—Ä–µ–∫–µ—Ä –î–∞–Ω–∏–∏–ª–∞").sheet1

# Telegram Bot
API_TOKEN = os.getenv("BOT_TOKEN")
USER_ID = 188573278  # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Telegram ID
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ç—Ä–µ–∫–µ—Ä. –í 20:00 –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –¥–Ω—é ‚úçÔ∏è")

@dp.message_handler(commands=['track'])
async def track(message: types.Message):
    await bot.send_message(message.chat.id, "1. –í–æ —Å–∫–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª?\n2. –ë—ã–ª–∞ –ª–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞?\n3. –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ñ–æ–∫—É—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã?\n4. –ß—Ç–æ —Å–¥–µ–ª–∞–ª –ø–æ –±–æ—Ç—É?\n5. –ß—Ç–æ –º–µ—à–∞–ª–æ?\n6. –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –¥–Ω—è?")

@dp.message_handler()
async def save(message: types.Message):
    data = message.text.split('\n')
    now = datetime.now().strftime("%Y-%m-%d")
    row = [now] + data[:6]
    sheet.append_row(row)
    await message.reply("–ó–∞–ø–∏—Å–∞–ª ‚úÖ")

async def send_reminders():
    while True:
        now = datetime.now().strftime("%H:%M")
        if now == "07:30":
            await bot.send_message(USER_ID, "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –í–æ —Å–∫–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª? –ë—ã–ª–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞? üèÉ‚Äç‚ôÇÔ∏è")
            await asyncio.sleep(60)
        elif now == "20:00":
            await bot.send_message(USER_ID, "–í—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –∏—Ç–æ–≥–∏ –¥–Ω—è ‚úçÔ∏è –ù–∞–ø–∏—à–∏:\n1. –í–æ —Å–∫–æ–ª—å–∫–æ –≤—Å—Ç–∞–ª\n2. –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n3. –§–æ–∫—É—Å-–≤—Ä–µ–º—è\n4. –ß—Ç–æ —Å–¥–µ–ª–∞–ª\n5. –ß—Ç–æ –º–µ—à–∞–ª–æ\n6. –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ –¥–Ω—è")
            await asyncio.sleep(60)
        await asyncio.sleep(30)

if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.create_task(send_reminders())
    executor.start_polling(dp, skip_updates=True)
